The ``matrix_divided`` doctests
===============================

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Tests:
----------
>>> m = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(m, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
>>> m  # original unchanged
[[1, 2, 3], [4, 5, 6]]

div as float
------------
>>> matrix_divided([[1.0, 2.5], [3.75, 4]], 2)
[[0.5, 1.25], [1.88, 2.0]]

Errors: matrix type/shape
-------------------------
>>> matrix_divided("not a matrix", 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided([[1, 2], "row"], 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided([[1, 2], [3, "x"]], 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided([[1, 2, 3], [4, 5]], 3)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

Errors: div checks
------------------
>>> matrix_divided([[1, 2], [3, 4]], "3")
Traceback (most recent call last):
...
TypeError: div must be a number
>>> matrix_divided([[1, 2], [3, 4]], 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero

Error cases: missing arguments
------------------------------
>>> matrix_divided([[1, 2], [3, 4]])
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 1 required positional argument: 'div'

>>> matrix_divided()
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
